<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2023-03-18T02:10:13+05:30</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">Hasitha Suneth’s Blog</title><subtitle>&quot;If you have knowledge, let others light their candles in it.&quot; ~ Margaret Fuller</subtitle><entry><title type="html">Portainer Installation/ Deployment Guide</title><link href="http://localhost:4000/blog/deployment-guide/2023/03/16/portainer-installation.html" rel="alternate" type="text/html" title="Portainer Installation/ Deployment Guide" /><published>2023-03-16T11:35:49+05:30</published><updated>2023-03-16T11:35:49+05:30</updated><id>http://localhost:4000/blog/deployment-guide/2023/03/16/portainer-installation</id><content type="html" xml:base="http://localhost:4000/blog/deployment-guide/2023/03/16/portainer-installation.html"><![CDATA[<h1 id="portainer-install-on-ubuntu-via-docker--docker-compose">Portainer Install on Ubuntu via Docker &amp; Docker-Compose</h1>

<!-- ![Alt Text](/blog/assets/imgs/test.webp) -->

<h2 id="about">About</h2>

<p>Portainer Community Edition (CE) is a powerful, open-source toolset that allows you to easily build and manage containers in Docker, Docker Swarm, Kubernetes, and Azure ACI. Portainer consists of two elements, the Portainer Server, and the Portainer Agent. Both elements run as lightweight Docker containers on a Docker engine.</p>

<p>Portainer CE is available to install with Docker on Linux, Docker on WSL/Docker Desktop, and Docker on Windows Container Service.</p>

<p>In this tutorial, we are going to install Portainer with Docker on the Linux option and use Ubuntu as the Linux distribution systems.</p>

<ul>
  <li><a href="https://www.portainer.io/">Official Website</a></li>
  <li><a href="https://docs.portainer.io/">Official Documentation</a></li>
</ul>

<h2 id="steps">Steps</h2>

<ol>
  <li>Install Docker and Docker-Compose</li>
  <li>Install &amp; Set up Portainer</li>
</ol>

<h2 id="prerequisites">Prerequisites</h2>

<p>To install Docker Engine, you need the 64-bit version of one of these Ubuntu versions:</p>

<ul>
  <li>Ubuntu Kinetic 22.10</li>
  <li>Ubuntu Jammy 22.04 (LTS)</li>
  <li>Ubuntu Focal 20.04 (LTS)</li>
  <li>Ubuntu Bionic 18.04 (LTS)</li>
</ul>

<p>Docker Engine is compatible with x86_64 (or amd64), armhf, arm64, and s390x architectures.</p>

<h2 id="1-install-docker-and-docker-compose">1. Install Docker, and Docker-Compose</h2>

<p>Docker Engine is an open source containerization technology for building and containerizing your applications. Docker Engine acts as a client-server application with:</p>

<ul>
  <li>A server with a long-running daemon process dockerd.</li>
  <li>APIs which specify interfaces that programs can use to talk to and instruct the Docker daemon.</li>
  <li>A command line interface (CLI) client docker.</li>
</ul>

<p>The CLI uses Docker APIs to control or interact with the Docker daemon through scripting or direct CLI commands. Many other Docker applications use the underlying API and CLI. The daemon creates and manage Docker objects, such as images, containers, networks, and volumes.</p>

<h3 id="11-install-docker">1.1. Install Docker</h3>

<ul>
  <li><a href="https://docs.docker.com/engine/install/ubuntu/">Official Documentation</a></li>
</ul>

<p>Follow this <a href="https://docs.docker.com/engine/install/">Official Guide</a> for install Docker on other Linux distribution systems.</p>

<h4 id="111-uninstall-old-versions">1.1.1. Uninstall old versions</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get remove docker docker-engine docker.io containerd runc
</code></pre></div></div>

<h4 id="112-set-up-the-repository">1.1.2. Set up the repository</h4>

<p><em>Update the apt package index and install packages to allow apt to use a repository over HTTPS:</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install </span>ca-certificates curl gnupg lsb-release
</code></pre></div></div>

<p><em>Add Docker’s official GPG key:</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo mkdir</span> <span class="nt">-m</span> 0755 <span class="nt">-p</span> /etc/apt/keyrings
curl <span class="nt">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg | <span class="nb">sudo </span>gpg <span class="nt">--dearmor</span> <span class="nt">-o</span> /etc/apt/keyrings/docker.gpg
</code></pre></div></div>

<p><em>Use the following command to set up the repository:</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="se">\</span>
  <span class="s2">"deb [arch=</span><span class="si">$(</span>dpkg <span class="nt">--print-architecture</span><span class="si">)</span><span class="s2"> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu </span><span class="se">\</span><span class="s2">
  </span><span class="si">$(</span>lsb_release <span class="nt">-cs</span><span class="si">)</span><span class="s2"> stable"</span> | <span class="nb">sudo tee</span> /etc/apt/sources.list.d/docker.list <span class="o">&gt;</span> /dev/null
</code></pre></div></div>

<h4 id="113-install-docker-engine">1.1.3. Install Docker Engine</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install </span>docker-ce docker-ce-cli containerd.io
</code></pre></div></div>

<p>Verify that the Docker Engine is installed correctly.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl is-active docker
</code></pre></div></div>

<h3 id="12-install-docker-compose">1.2. Install Docker-Compose</h3>

<p>Download and install Compose standalone latest version (in this case, it is v2.16.0; refer to the <a href="https://docs.docker.com/compose/install/other/">Official Documentation</a> to identify the latest version).</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-SL</span> https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-linux-x86_64 <span class="nt">-o</span> /usr/local/bin/docker-compose
<span class="nb">sudo chmod</span> +x /usr/local/bin/docker-compose
</code></pre></div></div>

<p>Verify that the Docker-Compose is installed correctly.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>docker-compose <span class="nt">--version</span>
</code></pre></div></div>

<!-- ### 1.3. (_optional_) Add your linux user to the _Docker_ group -->

<!-- ```
sudo usermod -aG docker $USER
``` -->

<h2 id="2-install--set-up-portainer">2. Install &amp; Set up Portainer</h2>

<p>For further details, kindly consult the <a href="https://docs.portainer.io/start/install-ce/server/docker/linux">Official Documentation</a>.</p>

<h3 id="21-create-a-new-docker-volume">2.1. Create a new Docker Volume</h3>

<p><em>This volume that Portainer Server will use to store its database.</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker volume create portainer_data
</code></pre></div></div>

<h3 id="22-launch-portainer">2.2. Launch Portainer</h3>

<p><em>Download and install the Portainer Server container.</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 8000:8000 <span class="nt">-p</span> 9443:9443 <span class="nt">--name</span><span class="o">=</span>portainer <span class="nt">--restart</span><span class="o">=</span>always <span class="nt">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="nt">-v</span> portainer_data:/data portainer/portainer-ce
</code></pre></div></div>

<h3 id="23-logging-in">2.3. Logging In</h3>

<p><em>Logging into your Portainer Server instance by opening a web browser and going to:</em></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost:9443
</code></pre></div></div>

<p>Replace <code class="language-plaintext highlighter-rouge">localhost</code> with the relevant IP address or FQDN if needed, and adjust the port if you changed it earlier.</p>]]></content><author><name>Admin</name></author><category term="deployment-guide" /><summary type="html"><![CDATA[Portainer Install on Ubuntu via Docker &amp; Docker-Compose]]></summary></entry><entry><title type="html">Snipe-IT Installation &amp;amp; Configuration Guide</title><link href="http://localhost:4000/blog/deployment-guide/2022/06/14/snipeit-installation.html" rel="alternate" type="text/html" title="Snipe-IT Installation &amp;amp; Configuration Guide" /><published>2022-06-14T08:00:00+05:30</published><updated>2022-06-14T08:00:00+05:30</updated><id>http://localhost:4000/blog/deployment-guide/2022/06/14/snipeit-installation</id><content type="html" xml:base="http://localhost:4000/blog/deployment-guide/2022/06/14/snipeit-installation.html"><![CDATA[<h1 id="snipe-it-assets-management-system-installation-on-ubuntu-via-docker-apache--nginx">Snipe-IT (Assets Management System) Installation on Ubuntu via Docker, Apache &amp; Nginx</h1>

<h2 id="about">About</h2>

<p>Snipe-IT was made for asset management, to enable departments to track who has which asset, when it was purchased, which software licenses and accessories are available, and so on.</p>

<p>Snipe-IT is a Free Open Source (FOSS) web based project built on Laravel and it follows a standard Laravel MVC file structure.</p>

<p>This project is actively developed and they <a href="https://github.com/snipe/snipe-it/releases">release quite frequently</a>. Check out the <a href="https://snipeitapp.com/">Snipe-IT website</a> for a <a href="https://snipeitapp.com/demo">demo</a>, a comprehensive list of features, screenshots and announcements for updates on new versions.</p>

<p><img src="/blog/assets/imgs/snipeit-dashboard.webp" alt="Snipe-IT Dashboard" /></p>

<p><br /></p>
<h4 id="on-the-official-website-of-the-sri-lankan-ministry-of-technology-i-made-this-guide-and-you-can-refer-to-each-section-as-follows">On the official website of the <strong><em>Sri Lankan Ministry of Technology</em></strong>, I made this guide, and you can refer to each section as follows:</h4>

<ul>
  <li>
    <h4 id="introduction"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/tutorial-Snipe-IT-Guide" target="\_blank"><strong>Introduction</strong></a></h4>
  </li>
  <li>
    <h4 id="features"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/tutorial-Snipe-IT-Guide-Features" target="\_blank"><strong>Features</strong></a></h4>
  </li>
  <li>
    <h4 id="video-guide-features--configurations"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/Video%20guide" target="\_blank"><strong>Video Guide (Features &amp; Configurations)</strong></a></h4>
  </li>
  <li>
    <h4 id="installation"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/tutorial-Snipe-IT-Guide-Installation" target="\_blank"><strong>Installation</strong></a></h4>
    <ul>
      <li>
        <h4 id="install-snipe-it-via-docker"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/tutorial-Snipe-IT-Guide-Installation#install-snipe-it-docker" target="\_blank"><strong>Install Snipe-IT via Docker</strong></a></h4>
      </li>
      <li>
        <h4 id="install-snipe-it-via-apache"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/tutorial-Snipe-IT-Guide-Installation#install-snipe-it-apache" target="\_blank"><strong>Install Snipe-IT via Apache</strong></a></h4>
      </li>
      <li>
        <h4 id="install-snipe-it-via-nginx"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/tutorial-Snipe-IT-Guide-Installation#install-snipe-it-nginx" target="\_blank"><strong>Install Snipe-IT via Nginx</strong></a></h4>
      </li>
      <li>
        <h4 id="pre-flight"><a href="https://mot.gov.lk/docs/resources/playbook/Guides%20and%20Tutorials/Asset%20Management%20using%20Snipe-IT/tutorial-Snipe-IT-Guide-Pre-Flight" target="\_blank"><strong>Pre-Flight</strong></a></h4>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>Admin</name></author><category term="deployment-guide" /><summary type="html"><![CDATA[Snipe-IT (Assets Management System) Installation on Ubuntu via Docker, Apache &amp; Nginx]]></summary></entry></feed>